import java.util.*;


public class DebitCardGenerator {
	
	private int bitCount;
	private String bitString;
	
	public static void main(String args[]){
		DebitCardGenerator dbg = new DebitCardGenerator();
		dbg.setBitCount(8);
		dbg.setBitString(dbg.genBitString(dbg.getBitCount()));
		System.out.println(dbg.convertToInt(Integer.parseInt(dbg.getBitString()), dbg.getBitString().length(), dbg.getBitString().length()));
	}
	
	public DebitCardGenerator() {
		this(0);
	}
	
	public DebitCardGenerator(int bitCount) {
		setBitCount(bitCount);
	}
	
	public void setBitCount(int bitCount) {
		if(bitCount > 0) {
			this.bitCount = bitCount;
		} else {
			System.out.println("Bit count not large enough");
		}
	}
	
	public int getBitCount() {
		return this.bitCount;
	}
	
	public void setBitString(String bitString) {
		this.bitString = bitString;
	}
	
	public String getBitString(){
		return this.bitString;
	}
	
	public String genBitString(int bitCount) {
		String bitString = "";
		int bit = 0;
		for(int i = 0; i < bitCount; i++) {
			bit = (int) (Math.random() * 2);
			System.out.println(bit);
			bitString += bit;
		}
		return bitString;
	}
	
	public int convertToInt(int bitString, int initLength, int length) {
		if(length == 0){
			return 0;
		}
		//System.out.println(((bitString%2) * (int) Math.pow(2, initLength-(length))));
		return ((bitString%2) * (int) Math.pow(2, initLength-(length))) + convertToInt(bitString/10, initLength, length-1);
	}
}
