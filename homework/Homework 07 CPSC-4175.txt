# Homework 13
## Gavin Kerr

1. I think I would rate the level of shock I recieved from this paper on equal level with the "Software apocolypse" article that we read earlier. In the first couple of paragraphs the author throws out so many hard truths that it was difficult at first. I was most affect when he mentioned that most of a programmers time was spent on "maintinence." I guess in my own minde, I imagined myself working on a variety of projects in which my problem solving skills would be challenge in new and interesting ways. I was also interesting to hear how a lot of code use to be made "in house" at different bussinesses.

It was also interesting to read about the factory model that vedors "buy into." I, myself, have seen the price of software fall when a vendors name is stained or when the vendor goes out of bussiness. Most of my experience in this is with video games, but the same principle holds true. And the idea that a lot of software is shelfware has really affected my contemporaries. Many of my friends have completely cut out paid for software in favor of some linux distro and the open source software that comes with it. While I see the allure of open source, I also see many software producers following bad bussiness practices.

One thing that I think should be added more to this paper is privacy concerns. A huge chunck of my friends have completely given up on Microsoft and Google products because of the privacy concerns assossiated with them. For example, one of my friends hate Chrome so much that they use a browser called Waterfox. Especially with the advent of the cloud, privacy has really become one of the reasons people have been transfering over to open source. I feel like something on that topic could be a great addition to this paper.

2. I want to preface by saying that this paper is almost two decades old. In terms of technology, it might as well be a centuries old manuscript detailing water irrigation in Rome. But it introduces and questions concepts which I had blindly accepted to this point. Thinking back to when Microsoft first started, I can imagine that it was increadibly difficult to sell an operating systems when there wasn't a physical product included. It's not like it's something you can hold and, just like we read before, most technology must have seemed like magic to the higher ups at buissnesses.

The car analogy was fairly humorous, but was about as outdated as everything else. Again, so much as changed that this paper would have to be thirty times longer just to cover up till now. With the technologies changing and the wide availability of the internet, the model has changed in ways that this paper could not have predicted. The Microsoft-Apple debate seems odd at this point. There was even a string of comercials in which the battle was brought into full light and used as a marketing point. 

One evolution I feel that it tantamount to this paper is the Mobile Operating System. Android, as an example, is light years away from anything talked about in this paper and I am really interested in hearing what this author would have to say about it. The operating system itself is based on the idea of standard application deployment across various hardware platforms. Additionally, the operating system is built to handle way different user input, touch screens, than anything that came before. Taking the car analogy to describe it, its like having the ability to purchase flying cars now. 